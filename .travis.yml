language: go
dist: xenial
sudo: required
services:
  - docker
node_js:
  - "10"
go:
  - '1.11.x'

jobs:
  include:
    - stage: test
      name: "Minikube Helm chart with Postman tests"
      env:
        - KUBERNETES_VERSION=v1.14.0
        - NAMESPACE=mr
        - RELEASE_NAME_INGRESS=abc
      install:
        - npm install newman
      before_script:
        - node_modules/.bin/newman --version
        - sudo mount --make-rshared /
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl
        - sudo chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        # Download and install KinD
        - go get sigs.k8s.io/kind
        - kind create cluster --config kind-config.yaml --image "kindest/node:${KUBERNETES_VERSION}"
        - export KUBECONFIG="$(kind get kubeconfig-path)"
        - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        - chmod 700 get_helm.sh
        - ./get_helm.sh
      script:
        # creating Tiller ServiceAccount
        - kubectl -n kube-system create sa tiller
        - kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
        # installing Tiller server component to the KinD cluster
        - helm init --skip-refresh --upgrade --service-account tiller --wait
        - helm repo update
        # install metallb as LoadBalancer
        - |
          helm install stable/metallb --name metallb \
          --set configInline="address-pools: \
                              - name: default \
                                protocol: layer2 \
                                addresses: \
                                - 172.17.255.1-172.17.255.250" \
          --namespace metallb-system
        - |
          helm install stable/nginx-ingress --name ${RELEASE_NAME_INGRESS} \
          --set controller.stats.enabled=true \
          --set controller.scope.namespace=${NAMESPACE} \
          --set rbac.create=true \
          --namespace ${NAMESPACE}
        # Wait for Nginx Ingress controller is running
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n ${NAMESPACE} get pods -lapp=nginx-ingress,component=controller -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for nginx ingress to be available"; kubectl get pods --all-namespaces; done
        # Install helm charts
        - pushd helm/massagerelax
        - helm dependency update
        - popd
        - helm install --name massagerelax helm/massagerelax --namespace ${NAMESPACE}
        # Wait for pods are being ready
        - until kubectl -n ${NAMESPACE} get pods -lapp=therapist -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for therapist to be available"; kubectl get pods --all-namespaces; done
        - curl https://raw.githubusercontent.com/mmuller88/massagerelax-therapist/master/test/therapist.postman_collection.json > therapist.postman_collection.json
        - node_modules/.bin/newman run therapist.postman_collection.json --global-var "host=172.17.255.1" --global-var "port=80" --global-var "prefix=/therapist/api" --global-var "protocol=http"

before_install:
  # troubleshooting info in case of problems
  - node --version
  - npm --version
  - docker version
  - docker info
  - echo $TRAVIS_COMMIT
  - echo $TRAVIS_TAG
  - echo $TRAVIS_BRANCH
  - echo $TRAVIS_BUILD_NUMBER
  - echo $TRAVIS_REPO_SLUG
